name: Tests
on:
  workflow_dispatch:
  push:
    branches: ["main"]
    tags-ignore: ["**"]
  pull_request:
  schedule:
    - cron: "0 6 * * *"

concurrency:
  group: check-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: tox env ${{ matrix.tox_env }} under python ${{ matrix.python }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python:
          - "3.13"
        tox_env:
          - pre-commit
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install uv
        uses: astral-sh/setup-uv@38f3f104447c67c051c4a08e39b64a148898af3a # v4
      - name: Pick environment to run
        run: |
          import os;
          env = "TOXENV=${{ matrix.tox_env }}\n"
          with open(os.environ["GITHUB_ENV"], mode="a", encoding="utf-8") as file_handler:
              file_handler.write(env)
        shell: python
      - name: Run the test suite
        run: |
          uvx --no-progress --quiet --with tox-uv tox run
  test:
    name: Run ${{ matrix.session }} tests under python ${{ matrix.python }} on ${{ matrix.os }}
    needs: check
    runs-on: ${{ matrix.os }}
    timeout-minutes: 10
    environment: test
    strategy:
      fail-fast: true
      matrix:
        python:
          - "3.13"
          - "3.12"
          - "3.11"
          - "3.10"
          - "3.9"
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      - name: Install uv
        uses: astral-sh/setup-uv@38f3f104447c67c051c4a08e39b64a148898af3a # v4
      - name: Pick environment to run
        run: |
          import os;
          toxenv = "TOXENV=py{}{}-test\n".format(*"${{ matrix.python }}".split("."))
          os_name = "OS_NAME=${{ matrix.os }}\n"
          env = toxenv + os_name
          with open(os.environ["GITHUB_ENV"], mode="a", encoding="utf-8") as file_handler:
              file_handler.write(env)
        shell: python
      - name: Github Login
        run: |
          echo "${{ secrets.GH_TOKEN }}" | gh auth login --with-token
      - name: Run the test suite
        run: |
          gh auth setup-git
          git config --global init.defaultBranch main
          uvx --no-progress --quiet --with tox-uv tox run
